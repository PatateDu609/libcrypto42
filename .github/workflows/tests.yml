name: 'Unit tests'

on:
  push:
    branches-ignore:
      - 'badges'
    paths:
      - .github/workflows/tests.yml
      - "./src/**.c"
      - "./include/**.h"
      - "./tests/**.c"
      - "**.test.c"
  pull_request:
    branches-ignore:
      - 'badges'
    paths:
      - .github/workflows/tests.yml
      - "./src/**.c"
      - "./include/**.h"
      - "./tests/**.c"
      - "**.test.c"

jobs:
  unit_test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Installing criterion
        run: sudo apt-get install -y libcriterion-dev

      - name: Compile libft
        run: make -C libft
      - name: Compile libcrypto42
        run: make
      - name: Running tests
        run: make check


      - name: Extract branch name
        id: extract_branch
        run: echo "branch=${GITHUB_REF#refs/heads/}" >> "${GITHUB_OUTPUT}"
      - name: Preparing badge environment
        id: unit
        run: |
          # output values used in other steps
          echo "path=${BADGE_PATH}" >> "${GITHUB_OUTPUT}"
          echo "branch=${BRANCH}" >> "${GITHUB_OUTPUT}"
        env:
          BADGE_PATH: ${{ steps.extract_branch.outputs.branch }}/test-badge.svg
          BRANCH: badges
      - name: Create destination directory
        env:
          BADGE_PATH: "${{ steps.unit.outputs.path }}"
        run: mkdir -p "${BADGE_PATH%/*}"
      - name: Generate the badge SVG image
        uses: emibcn/badge-action@v2.0.2
        id: badge
        with:
          label: 'Unit tests'
          path: ${{ steps.unit.outputs.path }}

      - name: Upload badge as artifact
        uses: actions/upload-artifact@v3
        with:
          name: badge
          path: ${{ steps.unit.outputs.path }}
          if-no-files-found: error

      - name: Commit badge
        continue-on-error: true
        env:
          BADGE: ${{ steps.unit.outputs.path }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add "${BADGE}"
          git commit -m "Add/Update badge"
      - name: Push badge commit
        uses: ad-m/github-push-action@master
        if: ${{ success() }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.unit.outputs.branch }}